buildscript {
    repositories {
        google()
    }
}
import java.security.MessageDigest

apply plugin: 'com.android.application'
apply plugin: 'io.sentry.android.gradle'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" } // For CircularReveal
    google()
}

def getVersionName = {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

static def computeApkChecksum(file) {
    def apkDigest = MessageDigest.getInstance("SHA-256")
    file.eachByte(256 * 1024) { byte[] data, int bytesRead ->
        apkDigest.update(data, 0, bytesRead)
    }
    return apkDigest.digest().encodeBase64().toString()
            .replaceAll('\\+', '-')
            .replaceAll('/', '_')
            .replaceAll('=', '')
}

android {
    useLibrary 'org.apache.http.legacy'

    compileSdkVersion rootProject.ext.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        applicationId "com.studio4plus.homerplayer"
        minSdkVersion 21
        targetSdkVersion rootProject.ext.targetSdkVersion
        multiDexEnabled true
        versionCode 69
        versionName getVersionName()
    }
    buildTypes {
        debug {
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions 'releaseType'
    productFlavors {
        development {
            dimension 'releaseType'
        }

        // Builds for distribution on GitHub (intended mostly for dedicated device installations).
        // - BIND_DEVICE_ADMIN permission added to allow device owner provisioning via QR code.
        gitHub {
            dimension 'releaseType'
        }

        // Builds for distribution in the Play Store.
        // - BIND_DEVICE_ADMIN permission removed to comply with the policy.
        playStore {
            dimension 'releaseType'
        }
    }
}

sentry {
    includeProguardMapping = true
    autoUploadProguardMapping = true
    ignoredFlavors = ["development", "gitHub"]
    ignoredBuildTypes = ["debug"]
    autoInstallation {
        enabled = false
    }
}

android.applicationVariants.all { variant ->
    if (variant.name == 'gitHubRelease') {
        def matcher = variant.packageApplicationProvider.name =~ /^package(.*)$/
        if (!matcher.find()) {
            throw new IllegalStateException("Task name doesn't match the pattern.")
        }
        def variantName = variant.name.capitalize()

        variant.outputs.all { output ->
            def outputDir = output.outputFile.parent

            task "generateProvisioningData${variantName}"(type: Copy) {
                description "create data for provisioning QR code"
                group "Build"
                dependsOn variant.packageApplicationProvider

                from file('src/main/templates/provisioning-qrcode.txt')
                into outputDir

                doFirst {
                    expand(
                            version: output.variantOutput.versionName.get(),
                            apkChecksum: computeApkChecksum(output.outputFile))
                }
            }
        }

        tasks.named("assemble${variantName}").get().dependsOn(tasks.named("generateProvisioningData${variantName}"))
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'de.greenrobot:eventbus:2.4.1'

    implementation 'androidx.activity:activity:1.6.1'
    implementation "androidx.appcompat:appcompat:${rootProject.ext.version_appcompat}"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.documentfile:documentfile:1.0.1'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'androidx.media:media:1.6.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    implementation 'com.google.guava:guava:24.1-android'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'com.google.android.exoplayer:exoplayer-core:2.18.2'

    implementation 'com.google.dagger:dagger:2.44.2'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.44.2'
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'

    implementation 'com.github.ozodrukh:CircularReveal:2.0.1@aar'

    def lumberjackVersion = '5.2.5'
    implementation "com.github.MFlisar.Lumberjack:lumberjack-library:$lumberjackVersion"
    implementation "com.github.MFlisar.Lumberjack:lumberjack-filelogger:$lumberjackVersion"
    implementation "com.github.MFlisar.Lumberjack:lumberjack-java-wrapper:$lumberjackVersion"

    developmentImplementation project(':app:crashreporting-noop')
    gitHubImplementation project(':app:crashreporting-noop')
    playStoreImplementation project(':app:crashreporting-sentry')

    developmentImplementation project(':app:analytics-noop')
    gitHubImplementation project(':app:analytics-noop')
    playStoreImplementation project(':app:analytics-noop')
}
